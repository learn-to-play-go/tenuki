{"version":3,"sources":["../src/svg-renderer.js"],"names":[],"mappings":"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","file":"svg-renderer.js","sourcesContent":["import utils from \"./utils\";\nimport Renderer from \"./renderer\";\n\nconst SVGRenderer = function(boardElement, { hooks, options }) {\n  Renderer.call(this, boardElement, { hooks: hooks, options: options });\n  utils.addClass(boardElement, \"tenuki-svg-renderer\");\n};\n\nSVGRenderer.prototype = Object.create(Renderer.prototype);\nSVGRenderer.prototype.constructor = SVGRenderer;\n\nconst CACHED_CONSTRUCTED_LINES = {};\n\nconst constructSVG = function(renderer, boardState, { hasCoordinates, smallerStones, flatStones }) {\n  const cacheKey = [boardState.boardSize, hasCoordinates, smallerStones, flatStones].toString();\n\n  const svg = utils.createSVGElement(\"svg\");\n  const defs = utils.createSVGElement(\"defs\");\n  utils.appendElement(svg, defs);\n\n  const blackGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.blackGradientID,\n      cy: \"15%\",\n      r: \"50%\"\n    }\n  });\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"hsl(0, 0%, 38%)\"\n    }\n  }));\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"#39363D\"\n    }\n  }));\n  utils.appendElement(defs, blackGradient);\n\n  const whiteGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.whiteGradientID,\n      cy: \"15%\",\n      r: \"50%\"\n    }\n  });\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"#FFFFFF\"\n    }\n  }));\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"#fafdfc\"\n    }\n  }));\n  utils.appendElement(defs, whiteGradient);\n\n  const contentsContainer = utils.createSVGElement(\"g\", {\n    attributes: {\n      class: \"contents\",\n      transform: `translate(${renderer.MARGIN}, ${renderer.MARGIN})`\n    }\n  });\n  utils.appendElement(svg, contentsContainer);\n\n  let lines;\n\n  if (CACHED_CONSTRUCTED_LINES[cacheKey]) {\n    lines = utils.clone(CACHED_CONSTRUCTED_LINES[cacheKey]);\n  } else {\n    lines = utils.createSVGElement(\"g\", {\n      attributes: {\n        class: \"lines\"\n      }\n    });\n\n    for (let y = 0; y < boardState.boardSize - 1; y++) {\n      for (let x = 0; x < boardState.boardSize - 1; x++) {\n        const lineBox = utils.createSVGElement(\"rect\", {\n          attributes: {\n            y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n            x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n            width: renderer.INTERSECTION_GAP_SIZE + 1,\n            height: renderer.INTERSECTION_GAP_SIZE + 1,\n            class: \"line-box\"\n          }\n        });\n\n        utils.appendElement(lines, lineBox);\n      }\n    }\n\n    CACHED_CONSTRUCTED_LINES[cacheKey] = lines;\n  }\n\n  utils.appendElement(contentsContainer, lines);\n\n  const hoshiPoints = utils.createSVGElement(\"g\", { attributes: { class: \"hoshi\" }});\n  utils.appendElement(contentsContainer, hoshiPoints);\n\n  Renderer.hoshiPositionsFor(boardState.boardSize).forEach(h => {\n    const hoshi = utils.createSVGElement(\"circle\", {\n      attributes: {\n        class: \"hoshi\",\n        cy: h.top * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: h.left * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        r: 2\n      }\n    });\n\n    utils.appendElement(hoshiPoints, hoshi);\n  });\n\n  if (hasCoordinates) {\n    const coordinateContainer = utils.createSVGElement(\"g\", {\n      attributes: {\n        class: \"coordinates\",\n        transform: `translate(${renderer.MARGIN}, ${renderer.MARGIN})`\n      }\n    });\n\n    for (let y = 0; y < boardState.boardSize; y++) {\n      // TODO: 16 is for the rendered height _on my browser_. not reliable...\n\n      [16/2 + 1 - (16 + 16/2 + 16/(2*2) + 16/(2*2*2)), 16/2 + 1 + (16 + 16/2) + (boardState.boardSize - 1)*(renderer.INTERSECTION_GAP_SIZE + 1)].forEach(verticalOffset => {\n        utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n          text: boardState.xCoordinateFor(y),\n          attributes: {\n            \"text-anchor\": \"middle\",\n            y: verticalOffset - 0.5,\n            x: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5\n          }\n        }));\n      });\n\n\n      [-1*(16 + 16/2 + 16/(2*2)), (16 + 16/2 + 16/(2*2)) + (boardState.boardSize - 1)*(renderer.INTERSECTION_GAP_SIZE + 1)].forEach(horizontalOffset => {\n        utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n          text: boardState.yCoordinateFor(y),\n          attributes: {\n            \"text-anchor\": \"middle\",\n            y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5 + 16/(2*2),\n            x: horizontalOffset - 0.5\n          }\n        }));\n      });\n\n      utils.appendElement(svg, coordinateContainer);\n    }\n  }\n\n  const intersections = utils.createSVGElement(\"g\", { attributes: { class: \"intersections\" }});\n\n  for (let y = 0; y < boardState.boardSize; y++) {\n    for (let x = 0; x < boardState.boardSize; x++) {\n      const intersectionGroup = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection\"\n        }\n      });\n      intersectionGroup.setAttribute(\"data-intersection-y\", y);\n      intersectionGroup.setAttribute(\"data-intersection-x\", x);\n      utils.appendElement(intersections, intersectionGroup);\n\n      const intersectionInnerContainer = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection-inner-container\"\n        }\n      });\n      utils.appendElement(intersectionGroup, intersectionInnerContainer);\n\n      const intersectionBox = utils.createSVGElement(\"rect\", {\n        attributes: {\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - renderer.INTERSECTION_GAP_SIZE/2 - 0.5,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - renderer.INTERSECTION_GAP_SIZE/2 - 0.5,\n          width: renderer.INTERSECTION_GAP_SIZE,\n          height: renderer.INTERSECTION_GAP_SIZE\n        }\n      });\n      utils.appendElement(intersectionInnerContainer, intersectionBox);\n\n      let stoneRadius = renderer.INTERSECTION_GAP_SIZE / 2;\n\n      if (smallerStones) {\n        stoneRadius -= 1;\n      }\n\n      const stoneAttributes = {\n        class: \"stone\",\n        cy: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        r: stoneRadius\n      };\n\n      if (!flatStones) {\n        utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n          attributes: {\n            class: \"stone-shadow\",\n            cy: stoneAttributes[\"cy\"] + 2,\n            cx: stoneAttributes[\"cx\"],\n            r: stoneRadius\n          }\n        }));\n      }\n\n      const intersection = utils.createSVGElement(\"circle\", {\n        attributes: stoneAttributes\n      });\n      utils.appendElement(intersectionInnerContainer, intersection);\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n        attributes: {\n          class: \"marker\",\n          cy: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          cx: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          r: 4.5\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"ko-marker\",\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          width: 12,\n          height: 12\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"territory-marker\",\n          y: y * (renderer.INTERSECTION_GAP_SIZE + 1) - 6,\n          x: x * (renderer.INTERSECTION_GAP_SIZE + 1) - 6,\n          width: 11,\n          height: 11\n        }\n      }));\n\n      renderer.grid[y] = renderer.grid[y] || [];\n      renderer.grid[y][x] = intersectionGroup;\n\n      renderer.addIntersectionEventListeners(intersectionGroup, y, x);\n    }\n  }\n\n  utils.appendElement(contentsContainer, intersections);\n\n  return svg;\n};\n\nSVGRenderer.prototype.generateBoard = function(boardState, { hasCoordinates, smallerStones, flatStones }) {\n  this.blackGradientID = utils.randomID(\"black-gradient\");\n  this.whiteGradientID = utils.randomID(\"white-gradient\");\n\n  const svg = constructSVG(this, boardState, { hasCoordinates, smallerStones, flatStones });\n\n  this.svgElement = svg;\n  this.svgElement.setAttribute(\"height\", this.BOARD_LENGTH);\n  this.svgElement.setAttribute(\"width\", this.BOARD_LENGTH);\n\n  return svg;\n};\n\nSVGRenderer.prototype.computeSizing = function() {\n  Renderer.prototype.computeSizing.call(this);\n\n  // In addition to the will-change re-raster in Renderer,\n  // the SVG element appears to sometimes need this to\n  // prevent blurriness on resize.\n  this.svgElement.style.transform = \"none\";\n\n  window.requestAnimationFrame(() => {\n    this.svgElement.style.transform = \"\";\n  });\n};\n\nSVGRenderer.prototype.setIntersectionClasses = function(intersectionEl, intersection, classes) {\n  if (intersectionEl.getAttribute(\"class\") !== classes.join(\" \")) {\n    intersectionEl.setAttribute(\"class\", classes.join(\" \"));\n  }\n\n  if (!this.flatStones) {\n    if (intersection.isEmpty()) {\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"\");\n    } else {\n      const base = window.location.href.split('#')[0];\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"fill: url(\" + base + \"#\" + this[intersection.value + \"GradientID\"] + \")\");\n    }\n  }\n};\n\nexport default SVGRenderer;\n"]}